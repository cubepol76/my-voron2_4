####################################################################################################
#  Beacon BL touch probe settings
####################################################################################################
[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_1F9ABDC24E4B333448202020FF0A303A-if00
speed:                5
lift_speed:           5
backlash_comp:        0.002
x_offset:             0
y_offset:             20
mesh_main_direction:  x
mesh_runs:            2



####################################################################################################
#  Homing and Gantry Adjustment Routines
####################################################################################################
[quad_gantry_level]
gantry_corners:
   -60, 5
   420,415
points:
   40,20
   40,290
   310,290
   310,20
speed:              200
horizontal_move_z:  5
retries:            5
retry_tolerance:    0.008
max_adjust:         5


####################################################################################################
#  Homing Override
####################################################################################################
[homing_override]
axes: z
set_position_z: 0
gcode:
  {% set speed = printer['gcode_macro _GLOBAL_VARIABLE'].speed %}
  {% set pos = printer['gcode_macro _GLOBAL_VARIABLE'].pos %}
  {% set home_x, home_y, home_z = false, false, false %}

  SAVE_GCODE_STATE NAME=homing_state

  {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
    {% set home_x, home_y, home_z = true, true, true %}
  {% else %}
    {% if params.X is defined %}
      {% set home_x = true %}
    {% endif %}

    {% if params.Y is defined %}
      {% set home_y = true %}
    {% endif %}

    {% if params.Z is defined %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set home_x = true %}

      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set home_y = true %}

      {% endif %}
      {% set home_z = true %}

    {% endif %}
  {% endif %}

  _SET_ACC VAL=HOME

  G91
  ZHOP

  {% if home_x %}
    G28 X
  {% endif %}

  {% if home_y %}
    G28 Y
  {% endif %}

  {% if home_z %}
    _HOME_Z
  {% endif %}

  POS_HOME ZHOP=0
  _SET_ACC

  RESTORE_GCODE_STATE NAME=homing_state


####################################################################################################
#  Home Z
####################################################################################################
[gcode_macro _HOME_Z]
description: Helper: z homing
gcode:
  {% set speed = printer['gcode_macro _GLOBAL_VARIABLE'].speed %}
  {% set pos = printer['gcode_macro _GLOBAL_VARIABLE'].pos %}
  {% set target_temp = printer['extruder'].target %}

  SAVE_GCODE_STATE NAME=home_z_state

  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

  G90                                                     # absolute position
  G0 X{pos.homing.x} Y{pos.homing.y} F{speed.homing.y}
  G28 Z

  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={target_temp}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={target_temp}


####################################################################################################
#  Conditional Homing
####################################################################################################
[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}


###################################################################################################
#  _SET_ACC
###################################################################################################
[gcode_macro _SET_ACC]
description: Helper: Set accel and accel_to_decel value
variable_last_val: 'CONFIG'
gcode:
  {% set val = params.VAL|default('CONFIG') %}
  {% set accel = 1000  if val == 'HOME'
            else printer.configfile.settings.printer.max_accel %}
  {% set accel_to_decel = accel|int / 2 if val == 'HOME'
            else printer.configfile.settings.printer.max_accel_to_decel %}

  {% if val != last_val %}
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=last_val VALUE='"{val}"'
    {action_respond_info("Home accel: %d, Home deccel: %d" % (accel|int, accel_to_decel|int))}
    SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
  {% endif %}



####################################################################################################
#  Run quad gantry level calibration
####################################################################################################
[gcode_macro QUAD_GANTRY_LEVEL]
description: Run quad gantry level calibration
rename_existing: QUAD_GANTRY_LEVEL_STOCK
gcode:
  ### Input parameter ##############################################################################
  {% set p_home_flag = params.HOME|default('true')|lower %}
  ##################################################################################################
  {% set target_temp = printer['extruder'].target %}

  SAVE_GCODE_STATE NAME=qgl_state

  _CG28

  BED_MESH_CLEAR

  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

  QUAD_GANTRY_LEVEL_STOCK {rawparams}

  {% if p_home_flag == 'true' %}
    G28 Z
  {% endif %}

  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={target_temp}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={target_temp}

  RESTORE_GCODE_STATE NAME=qgl_state
